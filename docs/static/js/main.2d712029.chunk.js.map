{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,aAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCK,EADnC,+DAEIE,MAAMP,GAFV,cAEbQ,EAFa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QATtB,kBAYZW,GAZY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAdAC,qBAAU,WACNhB,EAAQC,GACHgB,MACG,SAAAC,GACIC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAGhB,CAACZ,IAEGa,EDlBwBM,CAAanB,GAArCY,EAH4B,EAG5BA,QAAcH,EAHc,EAGnBJ,KAEhB,OACI,qCACI,6BAAKL,IAEL,sBAAMJ,UAAU,mCAAhB,SAAoDgB,GAAW,0CAE/D,qBAAKhB,UAAU,WAAf,SAEQa,EAAOF,KAAI,SAACa,GAAD,OACP,cAAC,EAAD,eAEIA,GADCA,EAAM3B,aEftB4B,EAAe,WAAM,MAGM1C,mBAAS,CAAC,QAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAU9B,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ4C,EAAWf,KAAK,SAACP,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,YCnBjCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d712029.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('One Punch')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"  \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"divImage animate__animated animate__fadeInUpBig\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=6Xedyw3MxzU9EMS94g8skkLeVtBzOdLo`;\r\n    const response = await fetch(url);\r\n\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import {GifGridItem} from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {loading, data:images} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            <span className=\"animate__animated animate__flash\">{loading && <p>Loading</p>}</span>\r\n\r\n            <div className=\"cardGrid\">\r\n                {\r\n                    images.map((image) => (\r\n                        <GifGridItem \r\n                        key={image.id} \r\n                        {...image}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(\r\n                imgs => {\r\n                    setTimeout(() => {\r\n                        setState({\r\n                            data: imgs,\r\n                            loading: false\r\n                        });\r\n                    }, 3000);\r\n                }\r\n            );\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Sol', 'Luna', 'Marte'];\r\n    const [categories, setCategories] = useState(['Sol']);\r\n\r\n  /*  const handleAdd = (e) => {\r\n        //setCategories(...categories, 'Tierra');\r\n        setCategories(cats => [...categories, 'Tierra']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category} \r\n                        />//<li key={category}> { category }</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}